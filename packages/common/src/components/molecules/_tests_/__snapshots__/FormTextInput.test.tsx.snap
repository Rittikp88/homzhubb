// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test cases for FormTextInput should render snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "#C9D6DF",
        "borderRadius": 2,
        "borderWidth": 1,
        "color": "#001B36",
        "fontSize": 14,
        "height": 48,
        "paddingHorizontal": 16,
        "paddingVertical": 4,
        "textAlign": "left",
      }
    }
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Test cases for FormTextInput should render snapshot when input type is email 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    keyboardType="email-address"
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "#C9D6DF",
        "borderRadius": 2,
        "borderWidth": 1,
        "color": "#001B36",
        "fontSize": 14,
        "height": 48,
        "paddingHorizontal": 16,
        "paddingVertical": 4,
        "textAlign": "left",
      }
    }
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Test cases for FormTextInput should render snapshot when input type is number 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    keyboardType="number-pad"
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "#C9D6DF",
        "borderRadius": 2,
        "borderWidth": 1,
        "color": "#001B36",
        "fontSize": 14,
        "height": 48,
        "paddingHorizontal": 16,
        "paddingVertical": 4,
        "textAlign": "left",
      }
    }
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Test cases for FormTextInput should render snapshot when input type is password 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    secureTextEntry={true}
    style={
      Object {
        "borderColor": "#C9D6DF",
        "borderRadius": 2,
        "borderWidth": 1,
        "color": "#001B36",
        "fontSize": 14,
        "height": 48,
        "paddingEnd": 36,
        "paddingHorizontal": 16,
        "paddingVertical": 4,
        "textAlign": "left",
      }
    }
    underlineColorAndroid="transparent"
  />
  <View
    style={
      Object {
        "bottom": 10,
        "position": "absolute",
        "right": 6,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#0084F8",
          "borderRadius": 4,
          "borderWidth": 0,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingHorizontal": 10,
          "paddingTop": 12,
          "paddingVertical": 10,
        }
      }
    >
      <Image
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../packages/common/src/assets/images/eye-slash.png",
          }
        }
        style={
          Object {
            "height": 16,
            "opacity": 0.4,
            "width": 16,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test cases for FormTextInput should render snapshot when input type is phone 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    keyboardType="number-pad"
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "#C9D6DF",
        "borderRadius": 2,
        "borderWidth": 1,
        "color": "#001B36",
        "fontSize": 14,
        "height": 48,
        "paddingHorizontal": 16,
        "paddingStart": 72,
        "paddingVertical": 4,
        "textAlign": "left",
      }
    }
    underlineColorAndroid="transparent"
  />
  <View
    style={
      Object {
        "borderRightColor": "#C9D6DF",
        "borderRightWidth": 0.5,
        "bottom": 6,
        "height": 34,
        "justifyContent": "center",
        "left": 0,
        "paddingBottom": 4,
        "paddingStart": 14,
        "position": "absolute",
        "width": 60,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 12,
            "lineHeight": 18,
            "textAlign": "left",
          },
          Object {
            "fontFamily": "OpenSans-Regular",
            "fontWeight": "400",
          },
          Object {
            "color": "#001B36",
          },
        ]
      }
    >
      +91
    </Text>
  </View>
</View>
`;

exports[`Test cases for FormTextInput should render snapshot when inputPrefixText is not there 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    keyboardType="number-pad"
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "#C9D6DF",
        "borderRadius": 2,
        "borderWidth": 1,
        "color": "#001B36",
        "fontSize": 14,
        "height": 48,
        "paddingHorizontal": 16,
        "paddingVertical": 4,
        "textAlign": "left",
      }
    }
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`Test cases for FormTextInput should render snapshot when password revealer is hide 1`] = `
<View
  style={
    Array [
      Object {
        "marginBottom": 4,
      },
      Object {},
    ]
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    onChangeText={[Function]}
    onValueChange={[MockFunction]}
    placeholderTextColor="#C9D6DF"
    rejectResponderTermination={true}
    secureTextEntry={true}
    style={Object {}}
    underlineColorAndroid="transparent"
  />
</View>
`;
