// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Property Images Component should render the PropertyImages component 1`] = `
<Fragment>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#F8FCFF",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": 15,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#33495E",
            }
          }
          textType="semiBold"
          type="small"
        >
          property:images
        </Text>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "margin": 20,
          }
        }
      >
        <UploadBox
          header="property:addPhotos"
          icon="gallery"
          onPress={[Function]}
          subHeader="property:supportedImageFormats"
        />
      </View>
    </View>
    <AddYoutubeUrl
      containerStyle={
        Object {
          "marginVertical": 20,
        }
      }
      isToggled={false}
      onToggle={[Function]}
      onUpdateUrl={[Function]}
      videoUrl=""
    />
  </View>
  <BottomSheet
    headerTitle="property:propertyImages"
    isShadowView={true}
    onCloseSheet={[Function]}
    sheetHeight={650}
    visible={false}
  >
    <ScrollViewMock
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </BottomSheet>
  <WithShadowView
    outerViewStyle={
      Object {
        "marginBottom": 20,
        "paddingBottom": 0,
        "paddingTop": 10,
      }
    }
  >
    <Button
      containerStyle={
        Object {
          "flex": 0,
          "margin": 16,
        }
      }
      onPress={[Function]}
      title="common:continue"
      type="primary"
    />
  </WithShadowView>
</Fragment>
`;
