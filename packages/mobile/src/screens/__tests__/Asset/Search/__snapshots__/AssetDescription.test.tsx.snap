// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Markdown View should render snapshot 1`] = `
<Fragment>
  <Loader
    visible={false}
  />
</Fragment>
`;

exports[`Markdown View should render snapshot with assetDetails 1`] = `
<Fragment>
  <Loader
    visible={false}
  />
  <Memo(StatusBarComponent)
    backgroundColor="transparent"
    barStyle="light-content"
    isTranslucent={true}
    statusBarStyle={
      Object {
        "height": 0,
      }
    }
  />
  <ParallaxScrollView
    backgroundColor="transparent"
    backgroundScrollSpeed={5}
    backgroundSpeed={10}
    contentBackgroundColor="#fff"
    contentContainerStyle={null}
    fadeOutForeground={true}
    onChangeHeaderVisibility={[Function]}
    outputScaleValue={5}
    parallaxHeaderHeight={250}
    renderBackground={[Function]}
    renderContentBackground={[Function]}
    renderFixedHeader={[Function]}
    renderForeground={[Function]}
    renderParallaxHeader={[Function]}
    renderScrollComponent={[Function]}
    renderStickyHeader={[Function]}
    stickyHeaderHeight={100}
    testID="parallaxView"
  >
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "paddingHorizontal": 16,
        }
      }
    >
      <View
        style={
          Object {
            "borderBottomColor": "#E5E8EB",
            "borderBottomWidth": 1,
          }
        }
      >
        <ShieldGroup
          isInfoRequired={true}
          propertyType="Apartment / Condo"
          text="It was popularised in the 1960s with the release of Letraset sheets."
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 8,
            }
          }
        >
          <Memo(PricePerUnit)
            currency={
              Object {
                "currency_code": "",
                "currency_name": "",
                "currency_symbol": "",
              }
            }
            price={NaN}
            unit="mo"
          />
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginVertical": 8,
            }
          }
        >
          <PropertyAddress
            isIcon={false}
            subAddress=" "
            subAddressStyle={
              Object {
                "marginLeft": 0,
                "maxWidth": 240,
              }
            }
          />
          <ForwardRef
            disabled={false}
            onPress={[Function]}
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Object {
                  "borderColor": "#E5E8EB",
                  "borderWidth": 1,
                  "height": 30,
                  "marginRight": 14,
                }
              }
            />
            <Icon
              allowFontScaling={false}
              color="#0084F8"
              name="house-marker"
              size={30}
              style={
                Object {
                  "marginHorizontal": 6,
                }
              }
            />
          </ForwardRef>
        </View>
        <PropertyAmenities
          containerStyle={
            Object {
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "marginBottom": 14,
            }
          }
          data={
            Array [
              Object {
                "icon": "furnishing",
                "iconColor": "#33495E",
                "iconSize": 20,
                "label": "None",
              },
              Object {
                "icon": "open-parking",
                "iconColor": "#33495E",
                "iconSize": 20,
                "label": "-",
              },
              Object {
                "icon": "area",
                "iconColor": "#33495E",
                "iconSize": 20,
                "label": "-",
              },
            ]
          }
          direction="row"
        />
        <Divider />
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingVertical": 16,
            }
          }
        >
          <View
            key="0"
            style={
              Object {
                "marginLeft": 4,
                "marginRight": 20,
              }
            }
          >
            <Label
              style={
                Object {
                  "color": "#4C5F72",
                }
              }
              textType="regular"
              type="large"
            >
              Posted on
            </Label>
            <Label
              style={
                Object {
                  "color": "#19324A",
                }
              }
              textType="semiBold"
              type="large"
            >
              30 Nov 2020
            </Label>
          </View>
          <View
            key="1"
            style={
              Object {
                "marginLeft": 4,
                "marginRight": 20,
              }
            }
          >
            <Label
              style={
                Object {
                  "color": "#4C5F72",
                }
              }
              textType="regular"
              type="large"
            >
              Available from
            </Label>
            <Label
              style={
                Object {
                  "color": "#19324A",
                }
              }
              textType="semiBold"
              type="large"
            >
              Invalid date
            </Label>
          </View>
        </View>
        <Divider />
      </View>
      <Memo(CollapsibleSection)
        isDividerRequired={true}
        title="description"
      >
        <Label
          numberOfLines={3}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "#4C5F72",
              "marginTop": 12,
            }
          }
          textType="regular"
          type="large"
        />
      </Memo(CollapsibleSection)>
      <Memo(CollapsibleSection)
        isDividerRequired={true}
        title="factsFeatures"
      >
        <FlatList
          contentContainerStyle={
            Object {
              "marginTop": 16,
            }
          }
          data={
            Array [
              Object {
                "locale_key": "security_deposit",
                "name": "Security Deposit",
                "value": "₹ 2 Lacs",
              },
              Object {
                "locale_key": "min_lease_period",
                "name": "Min Lease Period",
                "value": "3 Months",
              },
              Object {
                "locale_key": "maintenance_paid_by",
                "name": "Maintenance Paid By",
                "value": "Owner",
              },
              Object {
                "locale_key": "utilities_paid_by",
                "name": "Utilities Paid By",
                "value": "Tenant",
              },
              Object {
                "locale_key": "maintenance",
                "name": "Maintenance",
                "value": "₹ 5,000",
              },
              Object {
                "locale_key": "building_age",
                "name": "Building Age",
                "value": "5 Years",
              },
              Object {
                "locale_key": "building_type",
                "name": "Building Type",
                "value": "Apartment",
              },
            ]
          }
          disableVirtualization={false}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={2}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </Memo(CollapsibleSection)>
      <View
        style={
          Object {
            "marginTop": 24,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#4C5F72",
            }
          }
          textType="semiBold"
          type="small"
        >
          amenities
        </Text>
        <Label
          style={
            Object {
              "color": "#4C5F72",
              "marginTop": 12,
            }
          }
          textType="regular"
          type="large"
        >
          noAmenities
        </Label>
        <Divider
          containerStyles={
            Object {
              "marginTop": 24,
            }
          }
        />
      </View>
      <Memo(CollapsibleSection)
        isDividerRequired={true}
        title="highlights"
      >
        <FlatList
          contentContainerStyle={
            Object {
              "marginTop": 16,
            }
          }
          data={
            Array [
              Object {
                "covered": true,
                "name": "Power Backup",
              },
              Object {
                "covered": true,
                "name": "Gated Society",
              },
            ]
          }
          disableVirtualization={false}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={2}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </Memo(CollapsibleSection)>
      <View
        style={
          Object {
            "marginTop": 24,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#4C5F72",
            }
          }
          textType="semiBold"
          type="small"
        >
          exploreNeighbourhood
        </Text>
        <Label
          style={
            Object {
              "color": "#33495E",
              "marginTop": 12,
            }
          }
          textType="regular"
          type="large"
        />
        <MapView
          initialRegion={
            Object {
              "latitude": 25.619,
              "latitudeDelta": 0.01,
              "longitude": 85.123,
              "longitudeDelta": 0.01,
            }
          }
          pointerEvents="none"
          provider="google"
          style={
            Object {
              "flex": 1,
              "height": 180,
              "marginTop": 12,
            }
          }
        >
          <MapMarker
            coordinate={
              Object {
                "latitude": 25.619,
                "longitude": 85.123,
              }
            }
            stopPropagation={false}
          >
            <Memo(CustomMarker)
              selected={true}
            />
          </MapMarker>
        </MapView>
        <ForwardRef
          onPress={[Function]}
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 4,
              "bottom": 36,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
              "position": "absolute",
            }
          }
        >
          <Label
            style={
              Object {
                "color": "#0084F8",
              }
            }
            textType="regular"
            type="regular"
          >
            exploreMap
          </Label>
        </ForwardRef>
        <Divider
          containerStyles={
            Object {
              "marginTop": 24,
            }
          }
        />
      </View>
      <withI18nextTranslation(SimilarProperties)
        onSelectedProperty={[Function]}
        propertyTermId={1}
        transaction_type={0}
      />
    </View>
  </ParallaxScrollView>
</Fragment>
`;
